// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PillPalAPI.Model;

#nullable disable

namespace PillPalAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250430210636_AdminSeeded")]
    partial class AdminSeeded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PillPalLib.ActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ingredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActiveIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ingredient = "Adalimumab"
                        },
                        new
                        {
                            Id = 2,
                            Ingredient = "Pembrolizumab"
                        },
                        new
                        {
                            Id = 3,
                            Ingredient = "Semaglutid"
                        },
                        new
                        {
                            Id = 4,
                            Ingredient = "Apixaban"
                        },
                        new
                        {
                            Id = 5,
                            Ingredient = "Dupilumab"
                        },
                        new
                        {
                            Id = 6,
                            Ingredient = "Amoxicillin"
                        },
                        new
                        {
                            Id = 7,
                            Ingredient = "Klavulánsav"
                        },
                        new
                        {
                            Id = 8,
                            Ingredient = "Kolekalciferol"
                        },
                        new
                        {
                            Id = 9,
                            Ingredient = "Azitormicin"
                        },
                        new
                        {
                            Id = 10,
                            Ingredient = "Acetilszalicilsav"
                        },
                        new
                        {
                            Id = 11,
                            Ingredient = "Aszkorbinsav"
                        });
                });

            modelBuilder.Entity("PillPalLib.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageUnitId");

                    b.ToTable("Medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Autoimmun betegségek kezelésére szolgáló biológiai gyógyszer.",
                            Manufacturer = "AbbVie",
                            Name = "Humira",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Immunterápiás gyógyszer különböző rákos megbetegedések kezelésére.",
                            Manufacturer = "Merck",
                            Name = "Keytruda",
                            PackageUnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "2-es típusú cukorbetegség és testsúlycsökkentés kezelésére szolgáló gyógyszer.",
                            Manufacturer = "Novo Nordisk",
                            Name = "Ozempic",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Antikoaguláns, amely a vérrögképződést gátolja.",
                            Manufacturer = "Bristol-Myers Squibb és Pfizer",
                            Name = "Eliquis",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Biológiai gyógyszer gyulladásos betegségek kezelésére.",
                            Manufacturer = "Sanofi és Regeneron",
                            Name = "Dupixent",
                            PackageUnitId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Széles spektrumú antibiotikum, bakteriális fertőzések kezelésére, mint például légúti, húgyúti és bőrfertőzések.",
                            Manufacturer = "Teva",
                            Name = "Amoxicillin 750 mg",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Széles spektrumú antibiotikum, bakteriális fertőzések kezelésére, mint például légúti, húgyúti és bőrfertőzések.",
                            Manufacturer = "Teva",
                            Name = "Amoxicillin 1000 mg",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 8,
                            Description = "Hozzájárul az egészséges csontozat, fogazat és izomfunkciók fenntartásához, emellett szerepet játszik az immunrendszer megfelelő működésében is.",
                            Manufacturer = "Béres",
                            Name = "Béres VITA-D3 4000 NE",
                            PackageUnitId = 4
                        },
                        new
                        {
                            Id = 9,
                            Description = "Hozzájárul az egészséges csontozat, fogazat és izomfunkciók fenntartásához, emellett szerepet játszik az immunrendszer megfelelő működésében is.",
                            Manufacturer = "Béres",
                            Name = "Béres VITA-D3 1600 NE",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 10,
                            Description = "Hozzájárul az egészséges csontozat, fogazat és izomfunkciók fenntartásához, emellett szerepet játszik az immunrendszer megfelelő működésében is.",
                            Manufacturer = "Béres",
                            Name = "Béres VITA-D3 2000 NE",
                            PackageUnitId = 4
                        },
                        new
                        {
                            Id = 11,
                            Description = "Hozzájárul az egészséges csontozat, fogazat és izomfunkciók fenntartásához, emellett szerepet játszik az immunrendszer megfelelő működésében is.",
                            Manufacturer = "Béres",
                            Name = "Béres VITA-D3 FORTE 3200 NE",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 12,
                            Description = "Fertőző betegségek kezelésére szolgáló antibiotikum, ami gátolja a baktériumok fehérjeszintézisét, ezáltal megakadályozza a baktériumok növekedését és szaporodását.",
                            Manufacturer = "Teva",
                            Name = "Zitrocin 500 mg",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 13,
                            Description = "Mikroaktív technológiájának köszönhetően a leggyorsabb felszívódású Aspirin. Hatékonyan csillapítja a fejfájást és a lázat.",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Ultra",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 14,
                            Description = "Enyhíti a megfázás okozta fájdalmakat, csillapítja a lázat és még az orrdugulást is megszünteti.",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Complex",
                            PackageUnitId = 5
                        },
                        new
                        {
                            Id = 15,
                            Description = "Enyhíti a megfázás okozta fájdalmakat, csillapítja a lázat és még az orrdugulást is megszünteti.",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Complex Forró ital",
                            PackageUnitId = 5
                        },
                        new
                        {
                            Id = 16,
                            Description = "A fejfájás nem válogat, bárhol, bármikor megjelenhet. Készüljön fel rá az Aspirin Effect-tel!",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Effect",
                            PackageUnitId = 5
                        },
                        new
                        {
                            Id = 17,
                            Description = "Hatékonyan enyhíti a megfázás első jeleinek fájdalmait, csillapítja a lázat és még C-vitamint is tartalmaz.",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Plus C",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 18,
                            Description = "Hatékonyan enyhíti az erősebb megfázáshoz kapcsolódó fájdalmakat is, csillapítja a lázat és még C-vitamint is tartalmaz. Dupla hatóanyagtartalommal!",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Plus C Forte",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 19,
                            Description = "Megakadályozza a vérlemezkék összetapadását, s ezáltal az ereket szűkítő vagy elzáró vérrögök képződését.",
                            Manufacturer = "Bayer",
                            Name = "Aspirin Protect",
                            PackageUnitId = 1
                        });
                });

            modelBuilder.Entity("PillPalLib.MedicineActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActiveIngredientId");

                    b.HasIndex("MedicineId");

                    b.ToTable("MedicineActiveIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveIngredientId = 1,
                            MedicineId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActiveIngredientId = 2,
                            MedicineId = 2
                        },
                        new
                        {
                            Id = 3,
                            ActiveIngredientId = 3,
                            MedicineId = 3
                        },
                        new
                        {
                            Id = 4,
                            ActiveIngredientId = 4,
                            MedicineId = 4
                        },
                        new
                        {
                            Id = 5,
                            ActiveIngredientId = 5,
                            MedicineId = 5
                        },
                        new
                        {
                            Id = 6,
                            ActiveIngredientId = 6,
                            MedicineId = 6
                        },
                        new
                        {
                            Id = 7,
                            ActiveIngredientId = 7,
                            MedicineId = 6
                        },
                        new
                        {
                            Id = 8,
                            ActiveIngredientId = 6,
                            MedicineId = 7
                        },
                        new
                        {
                            Id = 9,
                            ActiveIngredientId = 7,
                            MedicineId = 7
                        },
                        new
                        {
                            Id = 10,
                            ActiveIngredientId = 8,
                            MedicineId = 8
                        },
                        new
                        {
                            Id = 11,
                            ActiveIngredientId = 8,
                            MedicineId = 9
                        },
                        new
                        {
                            Id = 12,
                            ActiveIngredientId = 8,
                            MedicineId = 10
                        },
                        new
                        {
                            Id = 13,
                            ActiveIngredientId = 8,
                            MedicineId = 11
                        },
                        new
                        {
                            Id = 14,
                            ActiveIngredientId = 9,
                            MedicineId = 12
                        },
                        new
                        {
                            Id = 15,
                            ActiveIngredientId = 10,
                            MedicineId = 13
                        },
                        new
                        {
                            Id = 16,
                            ActiveIngredientId = 10,
                            MedicineId = 14
                        },
                        new
                        {
                            Id = 17,
                            ActiveIngredientId = 10,
                            MedicineId = 15
                        },
                        new
                        {
                            Id = 18,
                            ActiveIngredientId = 10,
                            MedicineId = 16
                        },
                        new
                        {
                            Id = 19,
                            ActiveIngredientId = 10,
                            MedicineId = 17
                        },
                        new
                        {
                            Id = 20,
                            ActiveIngredientId = 11,
                            MedicineId = 17
                        },
                        new
                        {
                            Id = 21,
                            ActiveIngredientId = 10,
                            MedicineId = 18
                        },
                        new
                        {
                            Id = 22,
                            ActiveIngredientId = 11,
                            MedicineId = 18
                        },
                        new
                        {
                            Id = 23,
                            ActiveIngredientId = 10,
                            MedicineId = 19
                        });
                });

            modelBuilder.Entity("PillPalLib.MedicineRemedyFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("RemedyForId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("RemedyForId");

                    b.ToTable("MedicineRemedyForAilments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicineId = 1,
                            RemedyForId = 1
                        },
                        new
                        {
                            Id = 2,
                            MedicineId = 2,
                            RemedyForId = 2
                        },
                        new
                        {
                            Id = 3,
                            MedicineId = 3,
                            RemedyForId = 3
                        },
                        new
                        {
                            Id = 4,
                            MedicineId = 4,
                            RemedyForId = 4
                        },
                        new
                        {
                            Id = 5,
                            MedicineId = 5,
                            RemedyForId = 5
                        },
                        new
                        {
                            Id = 6,
                            MedicineId = 6,
                            RemedyForId = 6
                        },
                        new
                        {
                            Id = 7,
                            MedicineId = 6,
                            RemedyForId = 7
                        },
                        new
                        {
                            Id = 8,
                            MedicineId = 6,
                            RemedyForId = 8
                        },
                        new
                        {
                            Id = 9,
                            MedicineId = 7,
                            RemedyForId = 6
                        },
                        new
                        {
                            Id = 10,
                            MedicineId = 7,
                            RemedyForId = 7
                        },
                        new
                        {
                            Id = 11,
                            MedicineId = 7,
                            RemedyForId = 8
                        },
                        new
                        {
                            Id = 12,
                            MedicineId = 8,
                            RemedyForId = 9
                        },
                        new
                        {
                            Id = 13,
                            MedicineId = 8,
                            RemedyForId = 10
                        },
                        new
                        {
                            Id = 14,
                            MedicineId = 8,
                            RemedyForId = 11
                        },
                        new
                        {
                            Id = 15,
                            MedicineId = 9,
                            RemedyForId = 9
                        },
                        new
                        {
                            Id = 16,
                            MedicineId = 9,
                            RemedyForId = 10
                        },
                        new
                        {
                            Id = 17,
                            MedicineId = 9,
                            RemedyForId = 11
                        },
                        new
                        {
                            Id = 18,
                            MedicineId = 10,
                            RemedyForId = 9
                        },
                        new
                        {
                            Id = 19,
                            MedicineId = 10,
                            RemedyForId = 10
                        },
                        new
                        {
                            Id = 20,
                            MedicineId = 10,
                            RemedyForId = 11
                        },
                        new
                        {
                            Id = 21,
                            MedicineId = 11,
                            RemedyForId = 9
                        },
                        new
                        {
                            Id = 22,
                            MedicineId = 11,
                            RemedyForId = 10
                        },
                        new
                        {
                            Id = 23,
                            MedicineId = 11,
                            RemedyForId = 11
                        },
                        new
                        {
                            Id = 24,
                            MedicineId = 12,
                            RemedyForId = 6
                        },
                        new
                        {
                            Id = 25,
                            MedicineId = 12,
                            RemedyForId = 7
                        },
                        new
                        {
                            Id = 26,
                            MedicineId = 12,
                            RemedyForId = 8
                        },
                        new
                        {
                            Id = 27,
                            MedicineId = 12,
                            RemedyForId = 12
                        },
                        new
                        {
                            Id = 28,
                            MedicineId = 13,
                            RemedyForId = 13
                        },
                        new
                        {
                            Id = 29,
                            MedicineId = 14,
                            RemedyForId = 14
                        },
                        new
                        {
                            Id = 30,
                            MedicineId = 14,
                            RemedyForId = 15
                        },
                        new
                        {
                            Id = 31,
                            MedicineId = 15,
                            RemedyForId = 14
                        },
                        new
                        {
                            Id = 32,
                            MedicineId = 15,
                            RemedyForId = 15
                        },
                        new
                        {
                            Id = 33,
                            MedicineId = 16,
                            RemedyForId = 13
                        },
                        new
                        {
                            Id = 34,
                            MedicineId = 17,
                            RemedyForId = 13
                        },
                        new
                        {
                            Id = 35,
                            MedicineId = 17,
                            RemedyForId = 15
                        },
                        new
                        {
                            Id = 36,
                            MedicineId = 17,
                            RemedyForId = 16
                        },
                        new
                        {
                            Id = 37,
                            MedicineId = 18,
                            RemedyForId = 13
                        },
                        new
                        {
                            Id = 38,
                            MedicineId = 18,
                            RemedyForId = 15
                        },
                        new
                        {
                            Id = 39,
                            MedicineId = 18,
                            RemedyForId = 16
                        },
                        new
                        {
                            Id = 40,
                            MedicineId = 19,
                            RemedyForId = 4
                        });
                });

            modelBuilder.Entity("PillPalLib.MedicineSideEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("SideEffectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("SideEffectId");

                    b.ToTable("MedicineSideEffects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicineId = 1,
                            SideEffectId = 1
                        },
                        new
                        {
                            Id = 2,
                            MedicineId = 1,
                            SideEffectId = 2
                        },
                        new
                        {
                            Id = 3,
                            MedicineId = 2,
                            SideEffectId = 3
                        },
                        new
                        {
                            Id = 4,
                            MedicineId = 2,
                            SideEffectId = 4
                        },
                        new
                        {
                            Id = 5,
                            MedicineId = 3,
                            SideEffectId = 5
                        },
                        new
                        {
                            Id = 6,
                            MedicineId = 3,
                            SideEffectId = 1
                        },
                        new
                        {
                            Id = 7,
                            MedicineId = 4,
                            SideEffectId = 2
                        },
                        new
                        {
                            Id = 8,
                            MedicineId = 4,
                            SideEffectId = 3
                        },
                        new
                        {
                            Id = 9,
                            MedicineId = 5,
                            SideEffectId = 4
                        },
                        new
                        {
                            Id = 10,
                            MedicineId = 5,
                            SideEffectId = 5
                        },
                        new
                        {
                            Id = 11,
                            MedicineId = 6,
                            SideEffectId = 4
                        },
                        new
                        {
                            Id = 12,
                            MedicineId = 6,
                            SideEffectId = 5
                        },
                        new
                        {
                            Id = 13,
                            MedicineId = 6,
                            SideEffectId = 6
                        },
                        new
                        {
                            Id = 14,
                            MedicineId = 7,
                            SideEffectId = 4
                        },
                        new
                        {
                            Id = 15,
                            MedicineId = 7,
                            SideEffectId = 5
                        },
                        new
                        {
                            Id = 16,
                            MedicineId = 7,
                            SideEffectId = 6
                        },
                        new
                        {
                            Id = 17,
                            MedicineId = 8,
                            SideEffectId = 7
                        },
                        new
                        {
                            Id = 18,
                            MedicineId = 9,
                            SideEffectId = 7
                        },
                        new
                        {
                            Id = 19,
                            MedicineId = 10,
                            SideEffectId = 7
                        },
                        new
                        {
                            Id = 20,
                            MedicineId = 11,
                            SideEffectId = 7
                        },
                        new
                        {
                            Id = 21,
                            MedicineId = 12,
                            SideEffectId = 2
                        },
                        new
                        {
                            Id = 22,
                            MedicineId = 12,
                            SideEffectId = 5
                        },
                        new
                        {
                            Id = 23,
                            MedicineId = 12,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 24,
                            MedicineId = 13,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 25,
                            MedicineId = 13,
                            SideEffectId = 9
                        },
                        new
                        {
                            Id = 26,
                            MedicineId = 14,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 27,
                            MedicineId = 14,
                            SideEffectId = 9
                        },
                        new
                        {
                            Id = 28,
                            MedicineId = 15,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 29,
                            MedicineId = 15,
                            SideEffectId = 9
                        },
                        new
                        {
                            Id = 30,
                            MedicineId = 16,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 31,
                            MedicineId = 16,
                            SideEffectId = 9
                        },
                        new
                        {
                            Id = 32,
                            MedicineId = 17,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 33,
                            MedicineId = 17,
                            SideEffectId = 9
                        },
                        new
                        {
                            Id = 34,
                            MedicineId = 18,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 35,
                            MedicineId = 18,
                            SideEffectId = 9
                        },
                        new
                        {
                            Id = 36,
                            MedicineId = 19,
                            SideEffectId = 8
                        },
                        new
                        {
                            Id = 37,
                            MedicineId = 19,
                            SideEffectId = 9
                        });
                });

            modelBuilder.Entity("PillPalLib.PackageSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.ToTable("PackageSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicineId = 1,
                            Size = 2
                        },
                        new
                        {
                            Id = 2,
                            MedicineId = 2,
                            Size = 4
                        },
                        new
                        {
                            Id = 3,
                            MedicineId = 3,
                            Size = 1
                        },
                        new
                        {
                            Id = 4,
                            MedicineId = 4,
                            Size = 10
                        },
                        new
                        {
                            Id = 5,
                            MedicineId = 5,
                            Size = 5
                        },
                        new
                        {
                            Id = 6,
                            MedicineId = 6,
                            Size = 10
                        },
                        new
                        {
                            Id = 7,
                            MedicineId = 6,
                            Size = 20
                        },
                        new
                        {
                            Id = 8,
                            MedicineId = 7,
                            Size = 10
                        },
                        new
                        {
                            Id = 9,
                            MedicineId = 7,
                            Size = 20
                        },
                        new
                        {
                            Id = 10,
                            MedicineId = 8,
                            Size = 60
                        },
                        new
                        {
                            Id = 11,
                            MedicineId = 9,
                            Size = 90
                        },
                        new
                        {
                            Id = 12,
                            MedicineId = 10,
                            Size = 120
                        },
                        new
                        {
                            Id = 13,
                            MedicineId = 11,
                            Size = 60
                        },
                        new
                        {
                            Id = 14,
                            MedicineId = 11,
                            Size = 120
                        },
                        new
                        {
                            Id = 15,
                            MedicineId = 12,
                            Size = 3
                        },
                        new
                        {
                            Id = 16,
                            MedicineId = 13,
                            Size = 8
                        },
                        new
                        {
                            Id = 17,
                            MedicineId = 14,
                            Size = 10
                        },
                        new
                        {
                            Id = 18,
                            MedicineId = 15,
                            Size = 10
                        },
                        new
                        {
                            Id = 19,
                            MedicineId = 16,
                            Size = 10
                        },
                        new
                        {
                            Id = 20,
                            MedicineId = 17,
                            Size = 10
                        },
                        new
                        {
                            Id = 21,
                            MedicineId = 18,
                            Size = 10
                        },
                        new
                        {
                            Id = 22,
                            MedicineId = 19,
                            Size = 28
                        });
                });

            modelBuilder.Entity("PillPalLib.PackageUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackageUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "tabletta"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ml"
                        },
                        new
                        {
                            Id = 3,
                            Name = "injekció"
                        },
                        new
                        {
                            Id = 4,
                            Name = "kapszula"
                        },
                        new
                        {
                            Id = 5,
                            Name = "tasak"
                        });
                });

            modelBuilder.Entity("PillPalLib.RemedyFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ailment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RemedyForAilments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ailment = "Reumatoid artritisz"
                        },
                        new
                        {
                            Id = 2,
                            Ailment = "Melanóma"
                        },
                        new
                        {
                            Id = 3,
                            Ailment = "2-es típusú cukorbetegség"
                        },
                        new
                        {
                            Id = 4,
                            Ailment = "Vérrögképződés"
                        },
                        new
                        {
                            Id = 5,
                            Ailment = "Ekcéma"
                        },
                        new
                        {
                            Id = 6,
                            Ailment = "Légúti fertőzések"
                        },
                        new
                        {
                            Id = 7,
                            Ailment = "Húgyúti fertőzések"
                        },
                        new
                        {
                            Id = 8,
                            Ailment = "Bőrfertőzések"
                        },
                        new
                        {
                            Id = 9,
                            Ailment = "D-vitamin-hiány"
                        },
                        new
                        {
                            Id = 10,
                            Ailment = "Csontritkulás"
                        },
                        new
                        {
                            Id = 11,
                            Ailment = "Angolkór"
                        },
                        new
                        {
                            Id = 12,
                            Ailment = "Nemi úton terjedő betegségek"
                        },
                        new
                        {
                            Id = 13,
                            Ailment = "Fejfájás"
                        },
                        new
                        {
                            Id = 14,
                            Ailment = "Megfázás"
                        },
                        new
                        {
                            Id = 15,
                            Ailment = "Láz"
                        },
                        new
                        {
                            Id = 16,
                            Ailment = "Torokfájás"
                        });
                });

            modelBuilder.Entity("PillPalLib.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DoseCount")
                        .HasColumnType("float");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<string>("TakingMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("When")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UserId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("PillPalLib.SideEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SideEffects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Effect = "Fejfájás"
                        },
                        new
                        {
                            Id = 2,
                            Effect = "Hányinger"
                        },
                        new
                        {
                            Id = 3,
                            Effect = "Fáradtság"
                        },
                        new
                        {
                            Id = 4,
                            Effect = "Bőrkiütés"
                        },
                        new
                        {
                            Id = 5,
                            Effect = "Hasmenés"
                        },
                        new
                        {
                            Id = 6,
                            Effect = "Émelygés"
                        },
                        new
                        {
                            Id = 7,
                            Effect = "Magas kálciumszint"
                        },
                        new
                        {
                            Id = 8,
                            Effect = "Hasi fájdalom"
                        },
                        new
                        {
                            Id = 9,
                            Effect = "Vérzékenység"
                        });
                });

            modelBuilder.Entity("PillPalLib.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = new byte[] { 130, 99, 43, 49, 124, 40, 141, 44, 178, 100, 138, 207, 41, 128, 80, 211, 224, 41, 47, 12, 226, 105, 72, 110, 45, 142, 21, 31, 176, 115, 48, 154, 154, 78, 99, 25, 24, 33, 223, 253, 104, 6, 26, 101, 214, 106, 36, 187, 164, 75, 219, 235, 140, 119, 202, 226, 173, 61, 86, 224, 244, 241, 188, 41, 243, 109, 141, 123, 102, 210, 199, 180, 232, 101, 202, 122, 236, 99, 114, 148, 251, 137, 89, 117, 185, 197, 0, 176, 197, 11, 39, 7, 46, 252, 224, 160, 147, 165, 35, 109, 151, 0, 44, 217, 186, 135, 124, 184, 78, 127, 202, 143, 203, 178, 41, 129, 144, 91, 161, 70, 239, 42, 89, 48, 81, 207, 20, 171, 122, 224, 146, 7, 189, 156, 238, 195, 102, 59, 11, 116, 166, 63, 16, 203, 143, 23, 5, 212, 106, 197, 132, 43, 44, 112, 162, 20, 203, 117, 18, 19, 136, 176, 147, 15, 105, 64, 192, 97, 20, 134, 150, 231, 207, 100, 215, 147, 62, 246, 94, 21, 175, 35, 75, 104, 110, 33, 230, 166, 207, 17, 151, 226, 61, 141, 98, 239, 219, 20, 49, 23, 219, 241, 23, 121, 97, 8, 63, 129, 178, 14, 173, 82, 84, 72, 227, 44, 39, 128, 214, 113, 138, 158, 149, 66, 252, 153, 64, 239, 179, 29, 75, 113, 48, 21, 234, 141, 109, 89, 187, 72, 199, 44, 36, 113, 71, 81, 198, 15, 163, 47, 235, 2, 15, 94, 197, 18, 19, 203, 143, 3, 24, 211, 210, 226, 149, 7, 61, 109, 170, 106, 229, 108, 244, 100, 46, 148, 31, 95, 31, 217, 22, 224, 196, 153, 243, 226, 174, 38, 2, 56, 56, 160, 173, 165, 244, 54, 131, 1, 18, 180, 117, 208, 184, 117, 240, 97, 238, 4, 87, 192, 17, 71, 35, 43, 15, 236, 184, 144, 195, 253, 184, 133, 224, 65, 64, 191, 59, 182, 230, 245, 7, 37, 204, 254, 254, 7, 243, 80, 17, 244, 5, 64, 168, 144, 129, 207, 129, 86, 225, 53, 37, 231, 229, 63, 193, 18, 232, 16, 113, 39, 96, 115, 160, 108, 237, 110, 195, 175, 203, 152, 35, 61, 84, 20, 112, 58, 105, 113, 191, 94, 65, 22, 84, 174, 87, 180, 151, 102, 254, 27, 160, 1, 221, 241, 67, 70, 107, 116, 178, 189, 178, 67, 238, 252, 173, 16, 219, 53, 198, 174, 158, 236, 208, 204, 46, 247, 79, 144, 67, 170, 92, 44, 96, 154, 171, 70, 253, 26, 10, 89, 206, 56, 106, 75, 132, 192, 51, 18, 65, 69, 242, 250, 156, 211, 124, 151, 105, 119, 148, 73, 102, 24, 217, 152, 60, 76, 87, 219, 35, 173, 118, 236, 215, 73, 87, 216, 231, 7, 238, 0, 14, 123, 21, 187, 147, 245, 58, 234, 91, 19, 166, 94, 47, 149, 54, 131, 21, 190, 183, 14, 74, 127, 163, 148, 33, 95, 220, 22, 187, 178, 231, 138, 80, 19, 4, 222, 117, 203, 84, 199, 25, 242 },
                            UserName = "administrator"
                        });
                });

            modelBuilder.Entity("PillPalLib.Medicine", b =>
                {
                    b.HasOne("PillPalLib.PackageUnit", "PackageUnit")
                        .WithMany("Medicines")
                        .HasForeignKey("PackageUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageUnit");
                });

            modelBuilder.Entity("PillPalLib.MedicineActiveIngredient", b =>
                {
                    b.HasOne("PillPalLib.ActiveIngredient", "ActiveIngredient")
                        .WithMany("MedicineActiveIngredients")
                        .HasForeignKey("ActiveIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("MedicineActiveIngredients")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveIngredient");

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("PillPalLib.MedicineRemedyFor", b =>
                {
                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("MedicineRemedyForAilments")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.RemedyFor", "RemedyFor")
                        .WithMany("MedicineRemedyForAilments")
                        .HasForeignKey("RemedyForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("RemedyFor");
                });

            modelBuilder.Entity("PillPalLib.MedicineSideEffect", b =>
                {
                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("MedicineSideEffects")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.SideEffect", "SideEffect")
                        .WithMany("MedicineSideEffects")
                        .HasForeignKey("SideEffectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("SideEffect");
                });

            modelBuilder.Entity("PillPalLib.PackageSize", b =>
                {
                    b.HasOne("PillPalLib.Medicine", null)
                        .WithMany("PackageSizeObjects")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PillPalLib.Reminder", b =>
                {
                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("Reminders")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.User", "User")
                        .WithMany("Reminders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PillPalLib.ActiveIngredient", b =>
                {
                    b.Navigation("MedicineActiveIngredients");
                });

            modelBuilder.Entity("PillPalLib.Medicine", b =>
                {
                    b.Navigation("MedicineActiveIngredients");

                    b.Navigation("MedicineRemedyForAilments");

                    b.Navigation("MedicineSideEffects");

                    b.Navigation("PackageSizeObjects");

                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("PillPalLib.PackageUnit", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("PillPalLib.RemedyFor", b =>
                {
                    b.Navigation("MedicineRemedyForAilments");
                });

            modelBuilder.Entity("PillPalLib.SideEffect", b =>
                {
                    b.Navigation("MedicineSideEffects");
                });

            modelBuilder.Entity("PillPalLib.User", b =>
                {
                    b.Navigation("Reminders");
                });
#pragma warning restore 612, 618
        }
    }
}
