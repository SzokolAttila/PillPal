// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PillPalAPI.Model;

#nullable disable

namespace PillPalAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PillPalLib.ActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ingredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActiveIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ingredient = "Adalimumab"
                        },
                        new
                        {
                            Id = 2,
                            Ingredient = "Pembrolizumab"
                        },
                        new
                        {
                            Id = 3,
                            Ingredient = "Semaglutid"
                        },
                        new
                        {
                            Id = 4,
                            Ingredient = "Apixaban"
                        },
                        new
                        {
                            Id = 5,
                            Ingredient = "Dupilumab"
                        });
                });

            modelBuilder.Entity("PillPalLib.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageUnitId");

                    b.ToTable("Medicines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Autoimmun betegségek kezelésére szolgáló biológiai gyógyszer.",
                            Manufacturer = "AbbVie",
                            Name = "Humira",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Immunterápiás gyógyszer különböző rákos megbetegedések kezelésére.",
                            Manufacturer = "Merck",
                            Name = "Keytruda",
                            PackageUnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "2-es típusú cukorbetegség és testsúlycsökkentés kezelésére szolgáló gyógyszer.",
                            Manufacturer = "Novo Nordisk",
                            Name = "Ozempic",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Antikoaguláns, amely a vérrögképződést gátolja.",
                            Manufacturer = "Bristol-Myers Squibb és Pfizer",
                            Name = "Eliquis",
                            PackageUnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Biológiai gyógyszer gyulladásos betegségek kezelésére.",
                            Manufacturer = "Sanofi és Regeneron",
                            Name = "Dupixent",
                            PackageUnitId = 3
                        });
                });

            modelBuilder.Entity("PillPalLib.MedicineActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActiveIngredientId");

                    b.HasIndex("MedicineId");

                    b.ToTable("MedicineActiveIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveIngredientId = 1,
                            MedicineId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActiveIngredientId = 2,
                            MedicineId = 2
                        },
                        new
                        {
                            Id = 3,
                            ActiveIngredientId = 3,
                            MedicineId = 3
                        },
                        new
                        {
                            Id = 4,
                            ActiveIngredientId = 4,
                            MedicineId = 4
                        },
                        new
                        {
                            Id = 5,
                            ActiveIngredientId = 5,
                            MedicineId = 5
                        });
                });

            modelBuilder.Entity("PillPalLib.MedicineRemedyFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("RemedyForId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("RemedyForId");

                    b.ToTable("MedicineRemedyForAilments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicineId = 1,
                            RemedyForId = 1
                        },
                        new
                        {
                            Id = 2,
                            MedicineId = 2,
                            RemedyForId = 2
                        },
                        new
                        {
                            Id = 3,
                            MedicineId = 3,
                            RemedyForId = 3
                        },
                        new
                        {
                            Id = 4,
                            MedicineId = 4,
                            RemedyForId = 4
                        },
                        new
                        {
                            Id = 5,
                            MedicineId = 5,
                            RemedyForId = 5
                        });
                });

            modelBuilder.Entity("PillPalLib.MedicineSideEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("SideEffectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("SideEffectId");

                    b.ToTable("MedicineSideEffects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicineId = 1,
                            SideEffectId = 1
                        },
                        new
                        {
                            Id = 2,
                            MedicineId = 1,
                            SideEffectId = 2
                        },
                        new
                        {
                            Id = 3,
                            MedicineId = 2,
                            SideEffectId = 3
                        },
                        new
                        {
                            Id = 4,
                            MedicineId = 2,
                            SideEffectId = 4
                        },
                        new
                        {
                            Id = 5,
                            MedicineId = 3,
                            SideEffectId = 5
                        },
                        new
                        {
                            Id = 6,
                            MedicineId = 3,
                            SideEffectId = 1
                        },
                        new
                        {
                            Id = 7,
                            MedicineId = 4,
                            SideEffectId = 2
                        },
                        new
                        {
                            Id = 8,
                            MedicineId = 4,
                            SideEffectId = 3
                        },
                        new
                        {
                            Id = 9,
                            MedicineId = 5,
                            SideEffectId = 4
                        },
                        new
                        {
                            Id = 10,
                            MedicineId = 5,
                            SideEffectId = 5
                        });
                });

            modelBuilder.Entity("PillPalLib.PackageSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.ToTable("PackageSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MedicineId = 1,
                            Size = 2
                        },
                        new
                        {
                            Id = 2,
                            MedicineId = 2,
                            Size = 4
                        },
                        new
                        {
                            Id = 3,
                            MedicineId = 3,
                            Size = 1
                        },
                        new
                        {
                            Id = 4,
                            MedicineId = 4,
                            Size = 10
                        },
                        new
                        {
                            Id = 5,
                            MedicineId = 5,
                            Size = 5
                        });
                });

            modelBuilder.Entity("PillPalLib.PackageUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackageUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "tabletta"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ml"
                        },
                        new
                        {
                            Id = 3,
                            Name = "injekció"
                        });
                });

            modelBuilder.Entity("PillPalLib.RemedyFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ailment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RemedyForAilments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ailment = "Reumatoid artritisz"
                        },
                        new
                        {
                            Id = 2,
                            Ailment = "Melanóma"
                        },
                        new
                        {
                            Id = 3,
                            Ailment = "2-es típusú cukorbetegség"
                        },
                        new
                        {
                            Id = 4,
                            Ailment = "Vérrögképződés"
                        },
                        new
                        {
                            Id = 5,
                            Ailment = "Ekcéma"
                        });
                });

            modelBuilder.Entity("PillPalLib.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DoseCount")
                        .HasColumnType("float");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<string>("TakingMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("When")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UserId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("PillPalLib.SideEffect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SideEffects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Effect = "Fejfájás"
                        },
                        new
                        {
                            Id = 2,
                            Effect = "Hányinger"
                        },
                        new
                        {
                            Id = 3,
                            Effect = "Fáradtság"
                        },
                        new
                        {
                            Id = 4,
                            Effect = "Bőrkiütés"
                        },
                        new
                        {
                            Id = 5,
                            Effect = "Hasmenés"
                        });
                });

            modelBuilder.Entity("PillPalLib.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PillPalLib.Medicine", b =>
                {
                    b.HasOne("PillPalLib.PackageUnit", "PackageUnit")
                        .WithMany("Medicines")
                        .HasForeignKey("PackageUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageUnit");
                });

            modelBuilder.Entity("PillPalLib.MedicineActiveIngredient", b =>
                {
                    b.HasOne("PillPalLib.ActiveIngredient", "ActiveIngredient")
                        .WithMany("MedicineActiveIngredients")
                        .HasForeignKey("ActiveIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("MedicineActiveIngredients")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveIngredient");

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("PillPalLib.MedicineRemedyFor", b =>
                {
                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("MedicineRemedyForAilments")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.RemedyFor", "RemedyFor")
                        .WithMany("MedicineRemedyForAilments")
                        .HasForeignKey("RemedyForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("RemedyFor");
                });

            modelBuilder.Entity("PillPalLib.MedicineSideEffect", b =>
                {
                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("MedicineSideEffects")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.SideEffect", "SideEffect")
                        .WithMany("MedicineSideEffects")
                        .HasForeignKey("SideEffectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("SideEffect");
                });

            modelBuilder.Entity("PillPalLib.PackageSize", b =>
                {
                    b.HasOne("PillPalLib.Medicine", null)
                        .WithMany("PackageSizeObjects")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PillPalLib.Reminder", b =>
                {
                    b.HasOne("PillPalLib.Medicine", "Medicine")
                        .WithMany("Reminders")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PillPalLib.User", "User")
                        .WithMany("Reminders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PillPalLib.ActiveIngredient", b =>
                {
                    b.Navigation("MedicineActiveIngredients");
                });

            modelBuilder.Entity("PillPalLib.Medicine", b =>
                {
                    b.Navigation("MedicineActiveIngredients");

                    b.Navigation("MedicineRemedyForAilments");

                    b.Navigation("MedicineSideEffects");

                    b.Navigation("PackageSizeObjects");

                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("PillPalLib.PackageUnit", b =>
                {
                    b.Navigation("Medicines");
                });

            modelBuilder.Entity("PillPalLib.RemedyFor", b =>
                {
                    b.Navigation("MedicineRemedyForAilments");
                });

            modelBuilder.Entity("PillPalLib.SideEffect", b =>
                {
                    b.Navigation("MedicineSideEffects");
                });

            modelBuilder.Entity("PillPalLib.User", b =>
                {
                    b.Navigation("Reminders");
                });
#pragma warning restore 612, 618
        }
    }
}
