services:
  mssql:
    image: mcr.microsoft.com/mssql/server:${SERVER_VERSION}
    env_file: .env
    ports:
      - "${MSSQL_TCP_PORT}:${MSSQL_TCP_PORT}"
    restart: always
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P ${SA_PASSWORD} -Q 'SELECT 1' || (echo 'fail' && exit 1)
      retries: 5
      timeout: 10s
      start_period: 450s
    volumes:
      - ./mssql-data:/var/opt/mssql/data:rw
  mssql.configurator:
    image: mcr.microsoft.com/mssql/server:${SERVER_VERSION}
    env_file: .env
    volumes:
      - ./initdb/:/docker-entrypoint-initdb.d/
    depends_on:
      mssql:
        condition: service_healthy
    command: >
      bash -c "/opt/mssql-tools18/bin/sqlcmd -C -S mssql,1433 -U sa -P ${SA_PASSWORD} -d master -i ./docker-entrypoint-initdb.d/init.sql;
      echo 'DB created';"

  PillPalWebApp:
    image: idomi27/vue
    build:
      context: ./PillPalWebApp
      dockerfile: Dockerfile
    volumes:
      - ./PillPalWebApp:/app:rw
    ports:
      - "5173:5173"

  PillPalAPI:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    env_file: .env
    build:
      context: .
      dockerfile: PillPalAPI/Dockerfile
    ports: 
      - "5236:5236"
    depends_on:
      mssql: 
        condition: service_healthy
      mssql.configurator:
        condition: service_started
    volumes: 
      - ../PillPal:/app:rw
    command: >
      sh -c 'cd /app
      && dotnet tool install --global dotnet-ef 
      && export PATH="$PATH:/root/.dotnet/tools"
      && dotnet-ef database update --project ./PillPalAPI/PillPalAPI.csproj --configuration Release
      && dotnet ./PillPalAPI/bin/Release/net8.0/PillPalAPI.dll'